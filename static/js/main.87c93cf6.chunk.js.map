{"version":3,"sources":["../../src/index.tsx","useViewCounter.hook.js","useClickOutside.hook.js","Parameters.js","CustomizedBar.js","PointerBar.js","DemoApp.js","App.js","index.js","pointerBar.module.scss"],"names":["ProgressBar","alignmentOption","bgColor","completed","baseBgColor","height","width","margin","padding","borderRadius","labelAlignment","labelColor","labelSize","isLabelVisible","transitionDuration","transitionTimingFunction","className","dir","ariaValuemin","ariaValuemax","ariaValuetext","alignment","containerStyles","backgroundColor","fillerStyles","Number","transition","display","alignItems","justifyContent","labelStyles","color","fontWeight","fontSize","outsideStyles","completedStr","React.createElement","style","role","parseFloat","propTypes","PropTypes.oneOfType","PropTypes.string","PropTypes.number","isRequired","PropTypes.oneOf","PropTypes.bool","defaultProps","useViewCounter","slug","useState","views","setViews","useEffect","fetch","mode","then","res","json","totalViews","catch","err","console","error","message","useClickOutside","initialIsVisible","isVisible","setIsVisible","ref","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","Parameters","handleChange","handleBgChange","handleBaseBgChange","handleLabelColorChange","handleIsLabelVisibleChange","barColor","setBarColor","setBaseBgColor","setLabelColor","cpOne","cpTwo","cpThree","htmlFor","name","id","type","placeholder","onChange","onClick","position","marginTop","onChangeComplete","hex","value","defaultValue","CustomizedBar","INITIAL_STATE","state","setState","showCode","setShowCode","codeValue","setCodeValue","copySuccess","setCopySuccess","textAreaRef","handleReset","code","replace","e","select","execCommand","focus","PointerBar","styles","myClassName","DemoApp","setCompleted","setInterval","Math","floor","random","borderTop","paddingTop","App","window","location","pathname","charAt","substring","getSlug","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.87c93cf6.chunk.js","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nexport type ProgressBarProps = {\n  completed: string | number;\n  bgColor?: string;\n  baseBgColor?: string;\n  height?: string;\n  width?: string;\n  borderRadius?: string;\n  margin?: string;\n  padding?: string;\n  labelAlignment?: \"left\" | \"center\" | \"right\" | \"outside\";\n  labelColor?: string;\n  labelSize?: string;\n  isLabelVisible?: boolean;\n  transitionDuration?: string;\n  transitionTimingFunction?:\n    | \"ease\"\n    | \"linear\"\n    | \"ease-in\"\n    | \"ease-out\"\n    | \"ease-in-out\";\n  className?: string;\n  dir?: \"ltr\" | \"rtl\" | \"auto\";\n  ariaValuemin?: number;\n  ariaValuemax?: number;\n  ariaValuetext?: number | null;\n};\n\nconst ProgressBar: React.FC<ProgressBarProps> = ({\n  bgColor,\n  completed,\n  baseBgColor,\n  height,\n  width,\n  margin,\n  padding,\n  borderRadius,\n  labelAlignment,\n  labelColor,\n  labelSize,\n  isLabelVisible,\n  transitionDuration,\n  transitionTimingFunction,\n  className,\n  dir,\n  ariaValuemin,\n  ariaValuemax,\n  ariaValuetext,\n}) => {\n  const getAlignment = (\n    alignmentOption: ProgressBarProps[\"labelAlignment\"]\n  ) => {\n    if (alignmentOption === \"left\") {\n      return \"flex-start\";\n    } else if (alignmentOption === \"center\") {\n      return \"center\";\n    } else if (alignmentOption === \"right\") {\n      return \"flex-end\";\n    } else {\n      return null;\n    }\n  };\n\n  const alignment = getAlignment(labelAlignment);\n\n  const containerStyles: React.CSSProperties = {\n    height: height,\n    backgroundColor: baseBgColor,\n    borderRadius: borderRadius,\n    padding: padding,\n    width: width,\n    margin: margin,\n  };\n\n  const fillerStyles: React.CSSProperties = {\n    height: height,\n    width: Number(completed) > 100 ? `100%` : `${Number(completed)}%`,\n    backgroundColor: bgColor,\n    transition: `width ${transitionDuration || \"1s\"} ${\n      transitionTimingFunction || \"ease-in-out\"\n    }`,\n    borderRadius: \"inherit\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent:\n      labelAlignment !== \"outside\" && alignment ? alignment : \"normal\",\n  };\n\n  const labelStyles: React.CSSProperties = {\n    padding: labelAlignment === \"outside\" ? \"0 0 0 5px\" : \"5px\",\n    color: labelColor,\n    fontWeight: \"bold\",\n    fontSize: labelSize,\n    display: !isLabelVisible ? \"none\" : \"initial\",\n  };\n\n  const outsideStyles = {\n    display: labelAlignment === \"outside\" ? \"flex\" : \"initial\",\n    alignItems: labelAlignment === \"outside\" ? \"center\" : \"initial\",\n  };\n\n  const completedStr =\n    typeof completed === \"number\" ? `${completed}%` : `${completed}`;\n  return (\n    <div\n      style={outsideStyles}\n      className={className}\n      dir={dir}\n      role=\"progressbar\"\n      aria-valuenow={parseFloat(completedStr)}\n      aria-valuemin={ariaValuemin}\n      aria-valuemax={ariaValuemax}\n      aria-valuetext={`${\n        ariaValuetext === null ? completedStr : ariaValuetext\n      }`}\n    >\n      <div style={containerStyles}>\n        <div style={fillerStyles}>\n          {labelAlignment !== \"outside\" && (\n            <span style={labelStyles}>{completedStr}</span>\n          )}\n        </div>\n      </div>\n      {labelAlignment === \"outside\" && (\n        <span style={labelStyles}>{completedStr}</span>\n      )}\n    </div>\n  );\n};\n\nProgressBar.propTypes = {\n  completed: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  bgColor: PropTypes.string,\n  baseBgColor: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string,\n  borderRadius: PropTypes.string,\n  margin: PropTypes.string,\n  padding: PropTypes.string,\n  labelAlignment: PropTypes.oneOf([\"left\", \"center\", \"right\", \"outside\"]),\n  labelColor: PropTypes.string,\n  labelSize: PropTypes.string,\n  isLabelVisible: PropTypes.bool,\n  className: PropTypes.string,\n  dir: PropTypes.oneOf([\"rtl\", \"ltr\", \"auto\"]),\n};\n\nProgressBar.defaultProps = {\n  bgColor: \"#6a1b9a\",\n  height: \"20px\",\n  width: \"100%\",\n  borderRadius: \"50px\",\n  labelAlignment: \"right\",\n  baseBgColor: \"#e0e0de\",\n  labelColor: \"#fff\",\n  labelSize: \"15px\",\n  isLabelVisible: true,\n  dir: \"ltr\",\n  ariaValuemin: 0,\n  ariaValuemax: 100,\n  ariaValuetext: null,\n};\n\nexport default ProgressBar;\n","import { useState, useEffect } from \"react\";\nconst useViewCounter = (slug) => {\n  const [views, setViews] = useState(null);\n\n  useEffect(() => {\n    // Don't count views on localhost\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    fetch(`https://my-projects-dashboard.vercel.app/api/views/${slug}`, {\n      mode: \"no-cors\",\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        setViews(json.totalViews);\n      })\n      .catch((err) => console.error(err.message));\n  }, [slug]);\n  return { views };\n};\n\nexport default useViewCounter;\n","import { useEffect, useState, useRef } from \"react\";\n\nconst useClickOutside = initialIsVisible => {\n  const [isVisible, setIsVisible] = useState(initialIsVisible);\n  const ref = useRef(null);\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []);\n\n  return { ref, isVisible, setIsVisible };\n};\n\nexport default useClickOutside;\n","import React, { useState } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport useClickOutside from \"./useClickOutside.hook\";\nimport \"./parameters.styles.scss\";\n\nconst Parameters = ({\n  handleChange,\n  handleBgChange,\n  handleBaseBgChange,\n  handleLabelColorChange,\n  handleIsLabelVisibleChange,\n}) => {\n  const [barColor, setBarColor] = useState(\"#6a1b9a\");\n  const [baseBgColor, setBaseBgColor] = useState(\"#e0e0de\");\n  const [labelColor, setLabelColor] = useState(\"#e80909\");\n  const cpOne = useClickOutside(false);\n  const cpTwo = useClickOutside(false);\n  const cpThree = useClickOutside(false);\n\n  const handleColorChangeCpOne = (color) => {\n    setBarColor(color.hex);\n    handleBgChange(color.hex);\n  };\n\n  const handleColorChangeCpTwo = (color) => {\n    setBaseBgColor(color.hex);\n    handleBaseBgChange(color.hex);\n  };\n\n  const handleColorChangeCpThree = (color) => {\n    setLabelColor(color.hex);\n    handleLabelColorChange(color.hex);\n  };\n\n  return (\n    <>\n      <div className=\"param\">\n        <label htmlFor=\"completed\">completed</label>\n        <input\n          name=\"completed\"\n          id=\"completed\"\n          type=\"text\"\n          placeholder=\"1-100\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <button onClick={() => cpOne.setIsVisible(true)}>\n          Choose Bar Color\n        </button>\n        {cpOne.isVisible && (\n          <div\n            ref={cpOne.ref}\n            style={{ position: \"absolute\", marginTop: \"30px\" }}\n          >\n            <ChromePicker\n              name=\"barColor\"\n              color={barColor}\n              onChangeComplete={handleColorChangeCpOne}\n            />\n          </div>\n        )}\n        <input\n          value={barColor}\n          name=\"bgColor\"\n          type=\"text\"\n          onChange={(event) => {\n            handleChange(event);\n            setBarColor(event.target.value);\n          }}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"height\">height</label>\n        <input\n          name=\"height\"\n          id=\"height\"\n          type=\"text\"\n          placeholder=\"20px\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"width\">width</label>\n        <input\n          name=\"width\"\n          id=\"width\"\n          type=\"text\"\n          placeholder=\"100%\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"borderRadius\">border radius</label>\n        <input\n          name=\"borderRadius\"\n          id=\"borderRadius\"\n          type=\"text\"\n          placeholder=\"50px\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"labelAlignment\">label alignment</label>\n        <select\n          name=\"labelAlignment\"\n          defaultValue=\"right\"\n          id=\"labelAlignment\"\n          onChange={handleChange}\n        >\n          <option value=\"left\">left</option>\n          <option value=\"center\">center</option>\n          <option value=\"right\">right</option>\n          <option value=\"outside\">outside</option>\n        </select>\n      </div>\n      <div className=\"param\">\n        <button onClick={() => cpThree.setIsVisible(true)}>\n          Choose Label Color\n        </button>\n        {cpThree.isVisible && (\n          <div\n            ref={cpThree.ref}\n            style={{ position: \"absolute\", marginTop: \"30px\" }}\n          >\n            <ChromePicker\n              name=\"labelColor\"\n              color={labelColor}\n              onChangeComplete={handleColorChangeCpThree}\n            />\n          </div>\n        )}\n        <input\n          value={labelColor}\n          name=\"labelColor\"\n          type=\"text\"\n          onChange={(event) => {\n            handleChange(event);\n            setBaseBgColor(event.target.value);\n          }}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"labelSize\">label size</label>\n        <input\n          name=\"labelSize\"\n          id=\"labelSize\"\n          type=\"text\"\n          placeholder=\"15px\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"isLabelVisible\">is label visible</label>\n        <select\n          name=\"isLabelVisible\"\n          defaultValue=\"true\"\n          id=\"isLabelVisible\"\n          onChange={handleIsLabelVisibleChange}\n        >\n          <option value={true}>True</option>\n          <option value={false}>False</option>\n        </select>\n      </div>\n      <div className=\"param\">\n        <button onClick={() => cpTwo.setIsVisible(true)}>\n          Choose \"non-completed\" Bar Color\n        </button>\n        {cpTwo.isVisible && (\n          <div\n            ref={cpTwo.ref}\n            style={{ position: \"absolute\", marginTop: \"30px\" }}\n          >\n            <ChromePicker\n              name=\"baseBgColor\"\n              color={baseBgColor}\n              onChangeComplete={handleColorChangeCpTwo}\n            />\n          </div>\n        )}\n        <input\n          value={baseBgColor}\n          name=\"baseBgColor\"\n          type=\"text\"\n          onChange={(event) => {\n            handleChange(event);\n            setBaseBgColor(event.target.value);\n          }}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"margin\">margin</label>\n        <input name=\"margin\" id=\"margin\" type=\"text\" onChange={handleChange} />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"padding\">padding</label>\n        <input\n          name=\"padding\"\n          id=\"padding\"\n          type=\"text\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"transitionDuration\">transition duration</label>\n        <input\n          name=\"transitionDuration\"\n          id=\"transitionDuration\"\n          type=\"text\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"transitionTimingFunction\">\n          transition timing function\n        </label>\n        <select\n          name=\"transitionTimingFunction\"\n          defaultValue=\"right\"\n          id=\"transitionTimingFunction\"\n          onChange={handleChange}\n        >\n          <option value=\"ease-in-out\">ease-in-out</option>\n          <option value=\"ease\">ease</option>\n          <option value=\"linear\">linear</option>\n          <option value=\"ease-in\">ease-in</option>\n          <option value=\"ease-out\">ease-out</option>\n        </select>\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"dir\">direction</label>\n        <select\n          name=\"dir\"\n          defaultValue=\"ltr\"\n          id=\"dir\"\n          onChange={handleChange}\n        >\n          <option value=\"ltr\">ltr</option>\n          <option value=\"rtl\">rtl</option>\n          <option value=\"auto\">auto</option>\n        </select>\n      </div>\n    </>\n  );\n};\n\nexport default Parameters;\n","import React, { useState, useRef } from \"react\";\n\nimport Parameters from \"./Parameters\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport \"./customizedBar.styles.scss\";\n\nconst CustomizedBar = () => {\n  const INITIAL_STATE = {\n    completed: 50,\n    bgColor: \"#6a1b9a\",\n    height: \"20px\",\n    width: \"100%\",\n    borderRadius: \"50px\",\n    labelAlignment: \"right\",\n    baseBgColor: \"#e0e0de\",\n    labelColor: \"#e80909\",\n    labelSize: \"15px\",\n    margin: \"\",\n    padding: \"\",\n    isLabelVisible: true,\n    transitionDuration: \"1s\",\n    transitionTimingFunction: \"ease-in-out\",\n    dir: \"ltr\",\n  };\n\n  const [state, setState] = useState(INITIAL_STATE);\n  const [showCode, setShowCode] = useState(false);\n  const [codeValue, setCodeValue] = useState(\"\");\n  const [copySuccess, setCopySuccess] = useState(\"Copy\");\n  const textAreaRef = useRef(null);\n\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleBgChange = (color) => {\n    setState({\n      ...state,\n      bgColor: color,\n    });\n  };\n\n  const handleBaseBgChange = (color) => {\n    setState({\n      ...state,\n      baseBgColor: color,\n    });\n  };\n\n  const handleLabelColorChange = (color) => {\n    setState({\n      ...state,\n      labelColor: color,\n    });\n  };\n\n  const handleReset = () => {\n    setState(INITIAL_STATE);\n    setShowCode(false);\n  };\n\n  const handleIsLabelVisibleChange = (value) => {\n    setState({\n      ...state,\n      isLabelVisible: value === \"true\",\n    });\n  };\n\n  const copyToClipboard = (e) => {\n    textAreaRef.current.select();\n    document.execCommand(\"copy\");\n    e.target.focus();\n    setCopySuccess(\"Copied!\");\n  };\n\n  const generateCode = () => {\n    setCopySuccess(\"Copy\");\n    setShowCode(true);\n    const tempCode = `<ProgressBar \n    completed={${state.completed}}\n    ${state.bgColor === \"#6a1b9a\" ? \"\" : `bgColor=\"${state.bgColor}\"`}\n    ${state.height === \"20px\" ? \"\" : `height=\"${state.height}\"`}\n    ${state.width === \"100%\" ? \"\" : `width=\"${state.width}\"`}\n    ${\n      state.borderRadius === \"50px\"\n        ? \"\"\n        : `borderRadius=\"${state.borderRadius}\"`\n    }\n    ${\n      state.labelAlignment === \"right\"\n        ? \"\"\n        : `labelAlignment=\"${state.labelAlignment}\"`\n    }\n    ${state.isLabelVisible ? \"\" : `isLabelVisible={false}`}\n    ${\n      state.baseBgColor === \"#e0e0de\"\n        ? \"\"\n        : `baseBgColor=\"${state.baseBgColor}\"`\n    }\n    ${state.labelColor === \"#fff\" ? \"\" : `labelColor=\"${state.labelColor}\"`}\n    ${state.labelSize === \"15px\" ? \"\" : `labelSize=\"${state.labelSize}\"`}\n    ${state.margin === \"\" ? \"\" : `margin=\"${state.margin}\"`}\n    ${state.padding === \"\" ? \"\" : `padding=\"${state.padding}\"`}\n    ${\n      state.transitionDuration === \"1s\"\n        ? \"\"\n        : `transitionDuration=\"${state.transitionDuration}\"`\n    }\n    ${\n      state.transitionTimingFunction === \"ease-in-out\"\n        ? \"\"\n        : `transitionTimingFunction=\"${state.transitionTimingFunction}\"`\n    }\n    ${state.dir === \"ltr\" ? \"\" : `dir=\"${state.dir}\"`}\n    />`;\n    const code = tempCode.replace(/^\\s*$(?:\\r\\n?|\\n)/gm, \"\");\n    setCodeValue(code);\n  };\n\n  return (\n    <>\n      <ProgressBar {...state} />\n      <Parameters\n        handleChange={handleChange}\n        handleBgChange={handleBgChange}\n        handleBaseBgChange={handleBaseBgChange}\n        handleLabelColorChange={handleLabelColorChange}\n        handleIsLabelVisibleChange={handleIsLabelVisibleChange}\n        handleReset={handleReset}\n      />\n      <button className=\"reset-button\" onClick={handleReset}>\n        RESET\n      </button>\n      <button className=\"code-button\" onClick={generateCode}>\n        Generate Component Code\n      </button>\n      <div>\n        {showCode && (\n          <div className=\"code-area\">\n            <button onClick={copyToClipboard}>{copySuccess}</button>\n            <textarea\n              ref={textAreaRef}\n              value={codeValue}\n              onChange={(e) => setCodeValue(e.target.value)}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CustomizedBar;\n","import React from 'react'\nimport ProgressBar from '@ramonak/react-progress-bar'\nimport styles from './pointerBar.module.scss'\n\nconst PointerBar = () => (\n    <ProgressBar completed={50} className={styles.myClassName} />\n)\n\nexport default PointerBar","import React, { useState, useEffect } from \"react\";\nimport CustomizedBar from \"./CustomizedBar\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport PointerBar from \"./PointerBar\";\n\nconst DemoApp = () => {\n  const [completed, setCompleted] = useState(0);\n\n  useEffect(() => {\n    setInterval(() => setCompleted(Math.floor(Math.random() * 100) + 1), 2000);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h3>Randomly generated completed value</h3>\n      <ProgressBar completed={completed} />\n      <hr />\n      <h3>Interactive Generator</h3>\n      <CustomizedBar />\n      <h3 style={{ borderTop: \"1px black solid\", paddingTop: \"20px\" }}>\n        Example of the <i>className</i> prop of the parent <i>div</i> usage\n      </h3>\n      <p>\n        <i>cursor: pointer</i> CSS prop applied\n      </p>\n      <PointerBar />\n    </div>\n  );\n};\n\nexport default DemoApp;\n","import React from \"react\";\nimport useViewCounter from \"./useViewCounter.hook\";\nimport DemoApp from \"./DemoApp\";\n\nconst App = () => {\n  const getSlug = () => {\n    let slug = window.location.pathname;\n    if (slug.charAt(0) === \"/\") {\n      slug = slug.substring(1);\n    }\n    return slug;\n  };\n  useViewCounter(getSlug());\n\n  return (\n    <div className=\"App\">\n      <DemoApp />\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myClassName\":\"pointerBar_myClassName__PxdAv\"};"],"sourceRoot":""}